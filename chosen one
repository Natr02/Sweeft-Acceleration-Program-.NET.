using System;
using System.Threading;
using System.Threading.Tasks;

class Program
{
    private static readonly SemaphoreSlim semaphore = new SemaphoreSlim(1, 1);
    private static bool showMessage = false;

    static async Task Main()
    {
        Console.OutputEncoding = System.Text.Encoding.UTF8;

        var printTask = Task.Run(PrintBinaryLoop);
        var messageTask = Task.Run(DisplayMessagePeriodically);

        await Task.WhenAll(printTask, messageTask);
    }

    static async Task PrintBinaryLoop()
    {
        while (true)
        {
            await semaphore.WaitAsync();
            if (!showMessage)
            {
                Console.ForegroundColor = ConsoleColor.Green;
                Console.Write("10");
            }
            semaphore.Release();
            await Task.Delay(50);
        }
    }

    static async Task DisplayMessagePeriodically()
    {
        while (true)
        {
            await Task.Delay(5000);
            await semaphore.WaitAsync();

            showMessage = true;
            Console.Clear();
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.WriteLine("Neo, you are the chosen one");

            await Task.Delay(5000);
            showMessage = false;
            Console.Clear();

            semaphore.Release();
        }
    }
}
